/*
 *  ioports.h - Definition of the I/O ports and port pins.
 *
 *  Copyright (c) 2014 Stefan Taferner <stefan.taferner@gmx.at>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 3 as
 *  published by the Free Software Foundation.
 */
#include <sblib/ioports.h>


const int portMask[12] =
{
    1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048
};

#define  PF0_SHIFT 9
#define PF1_SHIFT (PF0_SHIFT + PFF_SHIFT_OFFSET)
#define PF2_SHIFT (PF1_SHIFT + PFF_SHIFT_OFFSET)
#define PF3_SHIFT (PF2_SHIFT + PFF_SHIFT_OFFSET)
#define FUNC0(x) ((x) << PF0_SHIFT)
#define FUNC1(x) ((x) << PF1_SHIFT)
#define FUNC2(x) ((x) << PF2_SHIFT)
#define FUNC3(x) ((x) << PF3_SHIFT)

#if defined (__LPC11XX__)
int pinFunctions[256] =
{
		FUNC0(PF_RESET) | FUNC1(PF_PIO),
		FUNC0(PF_PIO) | FUNC1(PF_CLKOUT) | FUNC2(PF_MAT),
		FUNC0(PF_PIO) | FUNC1(PF_SSEL) | FUNC2(PF_CAP),
		FUNC0(PF_PIO),
		FUNC0(PF_PIO) | FUNC1(PF_SCL),
		FUNC0(PF_PIO) | FUNC1(PF_SDA),
		FUNC0(PF_PIO) | FUNC1(PF_NONE) | FUNC2(PF_SCK),
		FUNC0(PF_PIO) | FUNC1(PF_CTS),
		FUNC0(PF_PIO) | FUNC1(PF_MISO) | FUNC2(PF_MAT),
		FUNC0(PF_PIO) | FUNC1(PF_MOSI) | FUNC2(PF_MAT),
		FUNC0(PF_SWCLK) | FUNC1(PF_PIO) | FUNC2(PF_SCK) | FUNC3(PF_MAT),
		FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_CAP) | PFL_ADMODE,
		FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
		FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
		FUNC0(PF_SWDIO) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
		FUNC0(PF_PIO) | FUNC1(PF_AD) | FUNC2(PF_MAT) | PFL_ADMODE,
		FUNC0(PF_PIO) | FUNC1(PF_RTS) | FUNC2(PF_CAP),
		FUNC0(PF_PIO) | FUNC1(PF_RXD) | FUNC2(PF_MAT),
		FUNC0(PF_PIO) | FUNC1(PF_TXD) | FUNC2(PF_MAT),
		FUNC0(PF_PIO) | FUNC1(PF_CAP),
		FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_MOSI),
		FUNC0(PF_PIO) | FUNC1(PF_AD) | FUNC2(PF_MAT) | FUNC3(PF_MISO) | PFL_ADMODE,
		FUNC0(PF_PIO) | FUNC1(PF_AD) | FUNC2(PF_CAP) | PFL_ADMODE,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		FUNC0(PF_PIO) | FUNC1(PF_DTR) | FUNC2(PF_SSEL),
		FUNC0(PF_PIO) | FUNC1(PF_DSR) | FUNC2(PF_SCK),
		FUNC0(PF_PIO) | FUNC1(PF_DCD) | FUNC2(PF_MISO),
		FUNC0(PF_PIO) | FUNC1(PF_RI) | FUNC2(PF_MOSI),
		FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_SSEL),
		FUNC0(PF_PIO) | FUNC1(PF_MAT),
		FUNC0(PF_PIO) | FUNC1(PF_MAT),
		FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_RXD),
		FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_TXD),
		FUNC0(PF_PIO) | FUNC1(PF_CAP),
		FUNC0(PF_PIO),
		FUNC0(PF_PIO) | FUNC1(PF_SCK) | FUNC2(PF_CAP),
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		FUNC0(PF_PIO) | FUNC1(PF_DTR) | FUNC2(PF_MAT) | FUNC3(PF_TXD),
		FUNC0(PF_PIO) | FUNC1(PF_DSR) | FUNC2(PF_MAT) | FUNC3(PF_RXD),
		FUNC0(PF_PIO) | FUNC1(PF_DCD) | FUNC2(PF_MAT) | FUNC3(PF_SCK),
		FUNC0(PF_PIO) | FUNC1(PF_RI) | FUNC2(PF_CAP),
		FUNC0(PF_PIO) | FUNC1(PF_CAP) | FUNC2(PF_RXD),
		FUNC0(PF_PIO) | FUNC1(PF_CAP) | FUNC2(PF_TXD)
};
#elif defined (__LPC11UXX__)
int pinFunctions[256] =
{
    FUNC0(PF_RESET) | FUNC1(PF_PIO),
    FUNC0(PF_PIO) | FUNC1(PF_CLKOUT) | FUNC2(PF_MAT) | FUNC3(PF_USB_FTOGGLE),
    FUNC0(PF_PIO) | FUNC1(PF_SSEL) | FUNC2(PF_CAP),
    FUNC0(PF_PIO) | FUNC1(PF_USB_VBUS),
    FUNC0(PF_PIO) | FUNC1(PF_SCL),
    FUNC0(PF_PIO) | FUNC1(PF_SDA),
    FUNC0(PF_PIO) | FUNC1(PF_USB_CONNECT) | FUNC2(PF_SCK),
    FUNC0(PF_PIO) | FUNC1(PF_CTS),
    FUNC0(PF_PIO) | FUNC1(PF_MISO) | FUNC2(PF_MAT) | FUNC3(PF_ARM_TRACE_CLK),
	FUNC0(PF_PIO) | FUNC1(PF_MOSI) | FUNC2(PF_MAT) | FUNC3(PF_ARM_TRACE_SWV),
	FUNC0(PF_SWCLK) | FUNC1(PF_PIO) | FUNC2(PF_SCK) | FUNC3(PF_MAT),
	FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
	FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_CAP) | PFL_ADMODE,
	FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
	FUNC0(PF_NONE) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
	FUNC0(PF_SWDIO) | FUNC1(PF_PIO) | FUNC2(PF_AD) | FUNC3(PF_MAT) | PFL_ADMODE,
	FUNC0(PF_PIO) | FUNC1(PF_AD) | FUNC2(PF_MAT) | PFL_ADMODE,
	FUNC0(PF_PIO) | FUNC1(PF_RTS) | FUNC2(PF_CAP) | FUNC3(PF_SCLK),
	FUNC0(PF_PIO) | FUNC1(PF_RXD) | FUNC2(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_TXD) | FUNC2(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_CAP),
	FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_MOSI),
	FUNC0(PF_PIO) | FUNC1(PF_AD) | FUNC2(PF_MAT) | FUNC3(PF_MISO) | PFL_ADMODE,
	FUNC0(PF_PIO) | FUNC1(PF_AD) |  PFL_ADMODE,
0,
0,
0,
0,
0,
0,
0,
0,
    FUNC0(PF_PIO) | FUNC1(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_CAP),
	0,
	FUNC0(PF_PIO),
	FUNC0(PF_PIO),
	0,
	FUNC0(PF_PIO),
	FUNC0(PF_PIO),
	0,
	FUNC0(PF_PIO) | FUNC1(PF_DTR) | FUNC2(PF_MAT) | FUNC3(PF_TXD),
	FUNC0(PF_PIO) | FUNC1(PF_DSR) | FUNC2(PF_MAT) | FUNC3(PF_RXD),
	FUNC0(PF_PIO) | FUNC1(PF_DCD) | FUNC2(PF_MAT) | FUNC3(PF_SCK),
	FUNC0(PF_PIO) | FUNC1(PF_RI) | FUNC2(PF_CAP),
	FUNC0(PF_PIO) | FUNC1(PF_CAP) | FUNC2(PF_RXD),
	FUNC0(PF_PIO) | FUNC1(PF_CAP) | FUNC2(PF_TXD),
	FUNC0(PF_PIO) | FUNC1(PF_DTR) | FUNC2(PF_SSEL),
	FUNC0(PF_PIO) | FUNC1(PF_DSR) | FUNC2(PF_SCK),
	FUNC0(PF_PIO) | FUNC1(PF_DCD) | FUNC2(PF_MISO),
	FUNC0(PF_PIO) | FUNC1(PF_RI) | FUNC2(PF_MOSI),
	FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_SSEL),
	FUNC0(PF_PIO) | FUNC1(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_MAT),
	FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_RXD),
	FUNC0(PF_PIO) | FUNC1(PF_MAT) | FUNC2(PF_TXD),
	FUNC0(PF_PIO) | FUNC1(PF_CAP) | FUNC2(PF_SCK),
	FUNC0(PF_PIO) | FUNC1(PF_SCK) | FUNC2(PF_CAP),
	0,
	FUNC0(PF_PIO),
};
#endif

short getPinFunctionNumber(int pin, short func)
{
	int pinFunction = pinFunctions[pin & 0xFF];
    pinFunction >>= PF0_SHIFT;

    for (int funcNumber = 0; funcNumber < 4; ++funcNumber)
    {
        if ((pinFunction & PFF_MASK) == func)
            return funcNumber;

        pinFunction >>= PFF_SHIFT_OFFSET;
    }

    return -1;
}
